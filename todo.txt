
NEXT

There is a problem with the new line numbering of unitsOfWork!!!!
The line numbers are worng and then it sums up all the tagCounts!!!
StringboundariesProcessor commented out

Block comments can extend over many lines - these need to be divided up into lines
statements should use the end not the start per line

foreach char in text
	comment chars
	string chars
	preprocessor chars

Need 
	total number blocks per block etc
	number lines per block
	comment line count per block, 
	blank line count per block, 
	ratio of letters to words can mean long words or short words which is 
	comment chars versus code chars
	code lines versus code chars
	spaces versus code chars
	maximum number of code chars per line
	code block max depth
	size of embedded strings
	ratio nested statements without brackets etc

Need to add comments, strings, preprocessors as blocks like Code and the look for matches in them too
Search strings, code, preprocessors by desing from json configs
Need to count preprocessors, strings, comments, blocks, statements as well as char count

Remove fluff from json file we don't need
Need to add all code to search only strings etc.
Need to handle ?? ?: etc as branching
Need to look for recursion?

TESTS
	VERY IMPORTANT - Need to write tests to see that the expected block are children of the right blocks
	Write tests for operators in if statements etc ie x^y != z%3 ie !^&|^ etc
	test to see if protected internal and veriations is OK
	tests that test naming of methods classes etc
	TESTS MUST INCLUDE COUNTS - need to be sure the counts match a complex file and not missing or adding incorrect features.


DEVELOPMENT

Check can switch off storing text value in block with flag for groups and unmasks
Need to have basic regex bricks that can be built up into other patterns ie <parameters>, <returnValue>, <name> etc

Refactor everything so the are as few insertion points into the original code as possible and it is easy to extend to new languages
It should all come in a folder on its own and not interfer with other folders for other languages
It should only work for code for now
It should only require a single line change to the ApplicationInspector to upgrade it to Codemology
It should be callable from the command line. 
Maybe it should reference the applicationInspector projects but run as an independent exe?

Does regex account for attributes on methods classes etc use tests
Does regex account for @class variable names?

	Need to modify newlines to include all these:
    : '<Carriage return character (U+000D)>'
    | '<Line feed character (U+000A)>'
    | '<Carriage return character (U+000D) followed by line feed character (U+000A)>'
    | '<Next line character (U+0085)>'
    | '<Line separator character (U+2028)>'
    | '<Paragraph separator character (U+2029)>'



	Codemology Abacus

The Abacus structures a text file into blocks defined by the language specification.
It uses those blocks to generate metric points
It uses those blocks to define the position of external metrics points like keyword/classname etc searches
It allows drill down into the file and metrics to be built for file/class/method/loop/branch etc
Next steps is to spit out a json file, with file text and errors
Then import the json file to create sums etc of metric points into metrics
Then to run that against the .NET Core library